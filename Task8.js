/*

Задача 8

Найдите функцию onAll, которая применяет функцию к каждому элементу списка. 

Используйте его для печати первых двадцати полных квадратов. Полные квадраты можно найти, умножив каждое натуральное число само на себя. Первые несколько полных квадратов - это 1**1 = 1,   2**2 = 4, 3**3 = 9, 4**4 = 16.

Двенадцать, например, не является полным квадратом, потому что не существует натурального числа m, такого чтобы m * m = 12.

*/

const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]

function onAll(arr, fn) {
	const squares = []

	for (let i = 0; i < arr.length; i++) {
		squares[i] = fn(arr[i])
		// squares.push(fn(arr[i]))
	}
	return squares
}

function square(num){
	let squared = num * num
	return squared
}

console.log(onAll(nums, square));

// -----------------------------------------------

// // Создание массива `nums`, содержащего числа от 1 до 9.
// const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// // Объявление функции onAll для применения функции fn к каждому элементу массива arr.
// function onAll(arr, fn) {
//     // Инициализация массива squares для хранения результатов применения функции fn к каждому элементу arr.
//     const squares = []

//     // Итерация по элементам массива arr с помощью цикла for.
//     for (let i = 0; i < arr.length; i++) {
//         // Применение функции fn к текущему элементу массива arr и сохранение результата в массив squares.
//         squares[i] = fn(arr[i])
//         // Можно также использовать метод push для добавления результата в массив squares:
//         // squares.push(fn(arr[i]))
//     }

//     // Возвращаем массив squares, содержащий результаты применения функции fn к каждому элементу массива arr.
//     return squares
// }

// // Объявление функции square для вычисления квадрата числа.
// function square(num) {
//     // Вычисление квадрата числа и возвращение результата.
//     let squared = num * num
//     return squared
// }

// // Вызов функции onAll с массивом nums и функцией square в качестве аргументов, вывод результата в консоль.
// console.log(onAll(nums, square))
// // Ожидаемый результат: [1, 4, 9, 16, 25, 36, 49, 64, 81], где каждое число в массиве - квадрат числа из массива `nums`.
